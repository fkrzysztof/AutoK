<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vw="clr-namespace:MVVMFirma.Views"
                    xmlns:vm="clr-namespace:MVVMFirma.ViewModels">


    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OsoboweViewModels}">
        <vw:OsoboweView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:MotocykleViewModels}">
        <vw:MotocykleView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:DostawczeViewModels}">
        <vw:DostawczeView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:CiezaroweViewModels}">
        <vw:CiezaroweView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:BudowlaneViewModels}">
        <vw:BudowlaneView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:PrzyczepyViewModels}">
        <vw:PrzyczepyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:RolniczeViewModels}">
        <vw:RolniczeView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:DodajOsoboweViewModels}">
        <vw:DodajOsoboweView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:AdresyViewModel}">
        <vw:AdresyView/>
    </DataTemplate>
   
    <DataTemplate DataType="{x:Type vm:DodajKontaktViewModel}">
        <vw:DodajKontaktView/>
    </DataTemplate>
   
    <DataTemplate DataType="{x:Type vm:DodajLokalizacjeViewModel}">
        <vw:DodajLokalizacjeView/>
    </DataTemplate>
   
    <DataTemplate DataType="{x:Type vm:StatystykiViewModel}">
        <vw:statystykiView/>
    </DataTemplate>
      
    <DataTemplate DataType="{x:Type vm:FrameAutoViewModel}">
        <vw:FrameAutoView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:WszystkieKomisyViewModel}">
        <vw:WszystkieKomisyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowyKomisViewModel}">
        <vw:NowyKomisView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowyPojazdViewModel}">
        <vw:NowyPojazdView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <vw:WszyscyKontrahenciView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkiePracownicyViewModel}">
        <vw:WszystkiePracownicyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszyscyKlienciViewModel}">
        <vw:WszyscyKlienciView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszyscyDostawcyViewModel}">
        <vw:WszyscyDostawcyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:RaportSprzedazyViewModel}">
        <vw:RaportSprzedazyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AutoSzczegolyViewModel}">
        <vw:AutoSzczegolyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:PojazdViewModel}">
        <vw:PojazdView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:KlientAutoViewModel}">
        <vw:KlientAutoView/>
    </DataTemplate>

  

    <!--Moje style-->

    <Style x:Key="ComboBoxStyle" 
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="SelectedIndex" Value="0" />
    </Style>

    <Style x:Key="ComboBoxStyleSort" 
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="2,10" />
        <Setter Property="SelectedIndex" Value="0" />
    </Style>
    
    
    <Style x:Key="ButtonStyle" 
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="ButtonEditStyle" 
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
      
       
    <Style x:Key="CheckBoxStyle" 
           TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
       <Style x:Key="CheckBoxStyleCechyAutaTak" 
           TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="8,8" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>
    
    <Style x:Key="CheckBoxStyleCechyAutaNie" 
           TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Margin" Value="8,8" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="IsEnabled" Value="True" />
    </Style>
    
    
    <Style x:Key="ListBoxStyle" 
           TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="DatePickerStyle" 
           TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style x:Key="TextBoxStyle" 
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

        <Style x:Key="TextBlockStyle" 
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    
    <Style x:Key="TextBoxStyleMargin10" 
           TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    
    
    <Style x:Key="TextBoxRightStyle" 
           BasedOn="{StaticResource TextBoxStyle}" 
           TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    
    
        <Style x:Key="TextBoxInfoStyle" 
                  TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="400" />
        <Setter Property="Height" Value="200" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="IsManipulationEnabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
            

    </Style>
          
        <Style x:Key="TextBoxKontrahent" 
                  TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="200" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="IsManipulationEnabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
            

    </Style>
      
            <Style x:Key="TextBoxAdresStyle" 
           TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="100" />
    </Style>
    
    
    <Style x:Key="StackPanelStyle" 
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="Background" Value="Azure"/>
    </Style>

    <Style x:Key="ButtonStyleRightMenu" 
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,10" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#FFCEDEFF"/>
    </Style>

    <Style x:Key="ButtonStyleLeftMenu" 
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#FFCEDEFF"/>
    </Style>



    <Style x:Key="LabelBig" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="LabelBig24Bold" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="LabelNormal" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="12" />

    </Style>
    
        <Style x:Key="LabelNormalRight" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FontSize" Value="12" />

    </Style>
    
    <Style x:Key="LabelCena" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStyle" Value="Oblique" />
    </Style>
    


    <Style x:Key="LabelMin" 
           TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontStyle" Value="Normal" />
    </Style>

    <Style x:Key="ToolbarButtonStyle" 
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontStyle" Value="Normal" />
    </Style>
    
        <Style x:Key="ToolbarButtonStyleMenu" 
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontStyle" Value="Normal" />
    </Style>
    

        <Style x:Key="DataGrid" 
           TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="ImageMale" 
           TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="122" />
    </Style>

    <Style x:Key="imageStyleTop" 
           TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
        
    </Style>

    <Style x:Key="imageStyleMenu" 
           TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        
    </Style>

    
    <Style x:Key="Expander10Up" 
           TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="5,10" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="ExpandDirection" Value="Up" />
    </Style>
   
    <Style x:Key="Expander10Down" 
           TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="5,10" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="ExpandDirection" Value="Down" />

    </Style>

    <Style x:Key="ExpanderMenu" 
           TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="ExpandDirection" Value="Down" />

    </Style>

    <Style x:Key="ExpanderMenuLeft" 
           TargetType="{x:Type Expander}">
        <Setter Property="Margin" Value="2" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="ExpandDirection" Value="Right" />

    </Style>

    <Style x:Key="GridStyleWhite" 
           TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White" />
    </Style>


    
    <Style x:Key="BorderStyleStat" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="VerticalAlignment" Value="top" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="10" />

    </Style>




    <Style x:Key="MainHCCStyleKrzysztof" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
                    Background="White" 
                    BorderBrush="Silver" 
                    BorderThickness="2" 
                    CornerRadius="5" 
                    Margin="4" 
                    Padding="4" 
                    SnapsToDevicePixels="True" 
                    >
                      <TextBlock
                        
                       
                      FontSize="14"
                      FontFamily="Arial"
                      FontWeight="Normal"
                      Foreground="Black" 
                      HorizontalAlignment="Center"  
                         
                        Text="{TemplateBinding Content}" 
                          />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>




    <!--Moje style Koniec-->


    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="White" 
            BorderBrush="Silver" 
            BorderThickness="2" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Normal"
              Foreground="Black" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
                              DockPanel.Dock="Top"
                              ContentSource="Header" 
                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                         />
                        <ContentPresenter 
                          ContentSource="Content" 
                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                         />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
                       <!--MENU *********************************************************************************** -->
                        <Hyperlink Command="{Binding Path=Command}">
                           <!--<Image Source="/MVVMFirma;component/Content/Icons/link_sm.png"  />-->
                          <TextBlock Foreground="Black" Text="{Binding Path=DisplayName}" />
                          <!--<Button Foreground="Black" Content="{Binding Path=DisplayName}" />-->
                        </Hyperlink>        
                    </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

    <!--My Style-->
    <Style x:Key="TypicalLabelGrid">
        <Setter Property="Label.Margin" Value="0,2,0,2"/>
    </Style>
    <Style x:Key="TypicalTextBoxGrid">
        <Setter Property="TextBox.Margin" Value="0,2,0,2"/>
    </Style>
</ResourceDictionary>